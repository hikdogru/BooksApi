
@{
    ViewData["Title"] = "Index";
}

<style>
    a {
        margin-bottom: .5rem;
    }
</style>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet">


<div class="container">
    <div class="row" style="margin-top:10%;">
        <h2 class="text-center">Http Requests</h2>

        <a href="~/api/book/get.json/" class="btn btn-primary">Get - Json format </a>
        <a href="~/api/book/get.xml/" class="btn btn-primary">Get - XML format </a>
        <div id="getById" style="border:solid 1px;">
            <input type="text" class="mt-2" name="id" id="id" placeholder="Id" />
            <a href="javascript:void(0)" onclick="getById()" class="btn btn-primary"> Get/id </a>
        </div>
        <div id="Create">
            <input type="text" name="id" id="idCreateMethod" placeholder="Id" disabled/>
            <input type="text" name="name" id="nameCreateMethod" placeholder="Name" />
            <input type="text" name="author" id="authorCreateMethod" placeholder="Author" />
            <input type="text" name="publisher" id="publisherCreateMethod" placeholder="Publisher" />
            <input type="text" name="image" id="imageCreateMethod" placeholder="Image" />
            <button class="btn btn-success" id="btnCreate"> Post </button>
        </div>
        <div id="update">

            <input type="text" name="id" id="idUpdateMethod" placeholder="Id" />
            <input type="text" name="name" id="name" placeholder="Name" />
            <input type="text" name="author" id="author" placeholder="Author" />
            <input type="text" name="publisher" id="publisher" placeholder="Publisher" />
            <input type="text" name="image" id="image" placeholder="Image" />
            <button type="submit" class="btn btn-warning" id="btnUpdate"> Put </button>

        </div>
        <div id="delete">
            <input type="text" name="idForDeleteMethod" id="idForDeleteMethod" />
            <button type="submit" class="btn btn-danger" id="btnDelete"> Delete </button>
        </div>


        <h2 class="text-center">Methods</h2>

    </div>
</div>

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<script>
    function getById() {
        let id = document.getElementById("id").value;
        window.location.href = `/api/book/${id}`;
    }

    $("#btnDelete").click(function () {
        let id = document.getElementById("idForDeleteMethod").value;
        const url = `/api/book/${id}`;

        const deleteMethod = {
            method: 'Delete', // Method itself
            headers: {
                'Content-type': 'application/json; charset=UTF-8' // Indicates the content
            },
        }

        // make the HTTP put request using fetch api
        fetch(url, deleteMethod)
            .then(response => response.json())
            .then(data => console.log(data)) // Manipulate the data retrieved back, if we want to do something with it
            .catch(err => console.log(err))
    });

    $("#btnUpdate").click(function () {
        let id = $("#idUpdateMethod").val();
        let name = $("#name").val();
        let author = $("#author").val();;
        let publisher = $("#publisher").val();;
        let image = $("#image").val();;
        var book = new Object();
        book.Name = name;
        book.Author = author;
        book.Publisher = publisher;
        book.Image = image;

        const putMethod = {
            method: 'PUT', // Method itself
            headers: {
                'Content-type': 'application/json; charset=UTF-8' // Indicates the content
            },
            body: JSON.stringify(book) // We send data in JSON format
        }

        const url = `/api/book/${id}`

        // make the HTTP put request using fetch api
        fetch(url, putMethod)
            .then(response => response.json())
            .then(data => console.log(data)) // Manipulate the data retrieved back, if we want to do something with it
            .catch(err => console.log(err))
    });

    $("#btnCreate").click(function () {
        let name = $("#nameCreateMethod").val();
        let author = $("#authorCreateMethod").val();;
        let publisher = $("#publisherCreateMethod").val();;
        let image = $("#imageCreateMethod").val();;
        var book = new Object();
        book.Name = name;
        book.Author = author;
        book.Publisher = publisher;
        book.Image = image;

        const postMethod = {
            method: 'Post', // Method itself
            headers: {
                'Content-type': 'application/json; charset=UTF-8' // Indicates the content
            },
            body: JSON.stringify(book) // We send data in JSON format
        }

        const url = `/api/book/post.json`

        // make the HTTP put request using fetch api
        fetch(url, postMethod)
            .then(response => response.json())
            .then(data => console.log(data)) // Manipulate the data retrieved back, if we want to do something with it
            .catch(err => console.log(err))
    });


</script>